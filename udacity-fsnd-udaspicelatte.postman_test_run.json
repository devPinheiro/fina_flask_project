{
	"id": "f3bbd9c1-e11c-449b-a6a0-99b881140afb",
	"name": "udacity-fsnd-udaspicelatte",
	"allTests": [],
	"timestamp": "2019-12-17T14:59:33.152Z",
	"collection_id": "509e75b9-8244-4721-85f0-bc97c9ecbe7b",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "0",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "509e75b9-8244-4721-85f0-bc97c9ecbe7b",
		"name": "udacity-fsnd-udaspicelatte",
		"order": [],
		"folders_order": [
			"07db08fd-87b2-4901-b4f0-62ae05508ff8",
			"bdd3efd5-29d4-4b62-a6b5-f63a124775ef",
			"0fef8742-8fd9-48cf-afd9-680e1e991400"
		],
		"isFavorite": false
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"results": [
		{
			"name": "/drinks",
			"id": "f79ee8bd-6b06-479c-bdae-eba560ed845d",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"513"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "513",
			"totalRequestTime": "513",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "d047d5a1-7765-430e-8823-527c919790e2",
			"url": "http://localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"508"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "508",
			"totalRequestTime": "508",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "b357841c-b77b-4c7e-a282-bfbdcadc75fe",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"507"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "507",
			"totalRequestTime": "507",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "4b9f648a-282e-4fdf-b834-1abdc52698d0",
			"url": "http://localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"510"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "510",
			"totalRequestTime": "510",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "9ef6bae6-8cbd-42b3-b75d-72b744fcf6aa",
			"url": "http://localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"507"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "507",
			"totalRequestTime": "507",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "6e3adcb6-6e48-4c7e-9e12-7bdf40eec1d2",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"509"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "509",
			"totalRequestTime": "509",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "6fc2cced-5beb-4dd8-b631-419a8495ac1e",
			"url": "http://localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"2187"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "2187",
			"totalRequestTime": "2187",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "d42d59e7-dd30-4ffc-9806-a0fb5f8d0e4e",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"1956"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "1956",
			"totalRequestTime": "1956",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "9f8e8a64-03fa-4fb4-8280-0feca895b89b",
			"url": "http://localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"2664"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "2664",
			"totalRequestTime": "2664",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "29f1625a-4f05-4f6a-92bf-4af60dd3cff2",
			"url": "http://localhost:5000/drinks/1",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"Status code is 401": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3658"
			],
			"allTests": [
				{
					"Status code is 401": true
				}
			],
			"time": "3658",
			"totalRequestTime": "3658",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "cbc9ed23-9e48-4f5d-a23b-4d00adcf5680",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"514"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "514",
			"totalRequestTime": "514",
			"iterationResults": {}
		},
		{
			"name": "/drinks-detail",
			"id": "87529d5a-1d30-4b9c-8652-365c439f31aa",
			"url": "http://localhost:5000/drinks-detail",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"1921"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "1921",
			"totalRequestTime": "1921",
			"iterationResults": {}
		},
		{
			"name": "/drinks",
			"id": "44ca6dad-8769-40be-829e-69acb194a734",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"2224"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "2224",
			"totalRequestTime": "2224",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "8df43599-a3ab-4d70-8898-2028ad7575a1",
			"url": "http://localhost:5000/drinks/3",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"value contains drinks array": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"2081"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"value contains drinks array": true
				}
			],
			"time": "2081",
			"totalRequestTime": "2081",
			"iterationResults": {}
		},
		{
			"name": "/drinks/1",
			"id": "d79a7722-81bb-40b8-bb92-b5296723b53d",
			"url": "http://localhost:5000/drinks/2",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"2160"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "2160",
			"totalRequestTime": "2160",
			"iterationResults": {}
		},
		{
			"name": "/drinks Copy",
			"id": "9c7c75ee-abbc-4057-982c-4ac459c1cb0a",
			"url": "http://localhost:5000/drinks",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"4621"
			],
			"allTests": [
				{
					"Status code is 200": true
				}
			],
			"time": "4621",
			"totalRequestTime": "4621",
			"iterationResults": {}
		}
	],
	"totalPass": 21,
	"totalFail": 0,
	"totalTime": 27040,
	"lifecycle": "done",
	"requests": [
		{
			"name": "/drinks",
			"id": "f79ee8bd-6b06-479c-bdae-eba560ed845d",
			"url": "http://localhost:5000/drinks",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "d047d5a1-7765-430e-8823-527c919790e2",
			"url": "http://localhost:5000/drinks-detail",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "b357841c-b77b-4c7e-a282-bfbdcadc75fe",
			"url": "http://localhost:5000/drinks",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "4b9f648a-282e-4fdf-b834-1abdc52698d0",
			"url": "http://localhost:5000/drinks/1",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "9ef6bae6-8cbd-42b3-b75d-72b744fcf6aa",
			"url": "http://localhost:5000/drinks/1",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "6e3adcb6-6e48-4c7e-9e12-7bdf40eec1d2",
			"url": "http://localhost:5000/drinks",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "6fc2cced-5beb-4dd8-b631-419a8495ac1e",
			"url": "http://localhost:5000/drinks-detail",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "d42d59e7-dd30-4ffc-9806-a0fb5f8d0e4e",
			"url": "http://localhost:5000/drinks",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "9f8e8a64-03fa-4fb4-8280-0feca895b89b",
			"url": "http://localhost:5000/drinks/1",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "29f1625a-4f05-4f6a-92bf-4af60dd3cff2",
			"url": "http://localhost:5000/drinks/1",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 401,
				"name": "UNAUTHORIZED",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "cbc9ed23-9e48-4f5d-a23b-4d00adcf5680",
			"url": "http://localhost:5000/drinks",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks-detail",
			"id": "87529d5a-1d30-4b9c-8652-365c439f31aa",
			"url": "http://localhost:5000/drinks-detail",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks",
			"id": "44ca6dad-8769-40be-829e-69acb194a734",
			"url": "http://localhost:5000/drinks",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "8df43599-a3ab-4d70-8898-2028ad7575a1",
			"url": "http://localhost:5000/drinks/3",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"value contains drinks array": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks/1",
			"id": "d79a7722-81bb-40b8-bb92-b5296723b53d",
			"url": "http://localhost:5000/drinks/2",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "/drinks Copy",
			"id": "9c7c75ee-abbc-4057-982c-4ac459c1cb0a",
			"url": "http://localhost:5000/drinks",
			"time": "2019-12-17T14:59:33.152Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}